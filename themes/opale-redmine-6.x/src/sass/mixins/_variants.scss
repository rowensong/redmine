@use "sass:color";
@use "sass:string";
@use "sass:map";
@use "../variables";

// Icon variant

@mixin icon-variant($variant, $svg: true) {
  $colors: map.get(variables.$icon-color-map, $variant);

  @if $svg {
    svg.icon-svg {
      stroke: map.get($colors, normal);
    }

    &:focus,
    &:hover {
      svg.icon-svg {
        stroke: map.get($colors, hover);
      }
    }
  } @else {
    &::before {
      color: map.get($colors, normal);
    }

    &:focus,
    &:hover {
      &::before {
        color: map.get($colors, hover);
      }
    }
  }
}


// Tabler icons variant

@mixin ti-icon {
  display: inline-block;
  margin-right: variables.$btn-padding-horizontal-small;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  line-height: 1;
}

@mixin ti-font {
  font-family: tabler-icons;
  font-weight: 400;
}

@mixin ti-icon-style($position: before) {
  &::#{ $position } {
    @include ti-icon;
    @include ti-font;
  }
}

@mixin ti-icon-variant($variant) {
  content: $variant;
}


// Button variant

@mixin button-variant($color, $bg, $border) {
  $correction: 1;

  @if color.channel($bg, 'hue', $space: hsl) > 120 and color.channel($bg, 'hue', $space: hsl) < 160 or color.channel($bg, 'lightness', $space: hsl) > 90 {
    $correction: .5;
  }

  $normal-shadow: color.adjust($border, $lightness: - (12% * $correction));
  $focus-bg: color.adjust($bg, $lightness: - (12% * $correction));
  $focus-border: color.adjust($border, $lightness: - (12% * $correction));
  $focus-shadow: color.adjust($focus-border, $lightness: - (12% * $correction));
  $active-bg: color.adjust($bg, $lightness: - (12% * $correction));
  $active-border: color.adjust($border, $lightness: - (15% * $correction));
  $active-shadow: inset 0 3px 4px -2px $active-border;

  @if color.channel($bg, 'lightness', $space: hsl) > 98 {
    $focus-bg: color.adjust($bg, $lightness: -5%);
    $focus-border: color.adjust($border, $lightness: -5%);
    $normal-shadow: none;
    $focus-shadow: none;
  }

  background-color: $bg;
  color: $color;

  @if $normal-shadow == "none" {
    border-color: $border;
    box-shadow: none;
  } @else {
    border-color: $border $border $normal-shadow;
    box-shadow: 0 1px 0 $normal-shadow;
  }

  &:hover,
  &:focus {
    background-color: $focus-bg;
    color: $color;

    @if $focus-shadow == "none" {
      border-color: $focus-border;
      box-shadow: none;
    } @else {
      border-color: $focus-border $focus-border $focus-shadow;
      box-shadow: 0 1px 0 $focus-shadow;
    }
  }

  &:active {
    transform: translate(0, 1px);
    border-color: $active-border;
    background-color: $active-bg;
    box-shadow: $active-shadow;
  }
}

@mixin button-size($padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius) {
  padding: $padding-vertical $padding-horizontal;
  border-radius: $border-radius;
  font-size: $font-size;
  line-height: $line-height;
}
